#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: "3"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  filesystem: {}
  dags: {}
  logs: {}
  plugins: {}
  db: {}


x-airflow-common:
 &airflow-common
 # In order to add custom dependencies or upgrade provider packages you can use your extended image.
 # Comment the image line, place your Dockerfile in the directory where you placed the docker-compose.yaml
 # and uncomment the "build" line below, Then run `docker-compose build` to build the images.
 image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.2.2}
 # build: .
 environment:
   &airflow-common-env
   #AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://druid:FoolishPassword@postgres/airflow
   AIRFLOW__CORE__SQL_ALCHEMY_CONN: "sqlite:////opt/airflow/airflow.db"
   AIRFLOW__CORE__EXECUTOR: SequentialExecutor
   _AIRFLOW_WWW_USER_USERNAME: 'airflow'
   _AIRFLOW_WWW_USER_PASSWORD: 'airflow'
   _AIRFLOW_DB_UPGRADE: 'true'
   _AIRFLOW_WWW_USER_CREATE: 'true'
   AIRFLOW__CORE__FERNET_KEY: ''
   AIRFLOW_HOME: '/opt/airflow'
   AIRFLOW__CORE__DAGS_FOLDER: '/opt/airflow/dags'
   AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
   #AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
   AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
   _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-apache-druid apache-airflow-providers-postgres"
 volumes:
   - ./dags:/opt/airflow/dags
   - ./logs:/opt/airflow/logs
   - ./plugins:/opt/airflow/plugins
   - ./filesystem:/tmp/filesystem
   - ./db:/opt/airflow
 user: "${AIRFLOW_UID:-50000}:0"
 links:
   - "postgres"
   - "router"
 depends_on:
   &airflow-common-depends-on
   router:
     condition: service_started
   postgres:
     condition: service_healthy



services:
  postgres:
    container_name: postgres
    image: postgres:13
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "FoolishPassword"
      POSTGRES_USER: "druid"
      POSTGRES_DB: "druid"
    ports:
        - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "druid"]
      interval: 5s
      retries: 5
    restart: always

  # Need 3.5 or later for container nodes
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5
    environment:
      - ZOO_MY_ID=1

  coordinator:
    image: apache/druid:24.0.0
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
      - ./filesystem:/tmp/filesystem
    depends_on: 
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command:
      - coordinator
    environment:
      - DRUID_XMX=256m
      - DRUID_XMS=256m
      - DRUID_MAXNEWSIZE=250m
      - DRUID_NEWSIZE=250m
      - DRUID_MAXDIRECTMEMORYSIZE=400m
      - druid_emitter_logging_logLevel=debug
      - druid_extensions_loadList=["druid-histogram", "druid-datasketches", "druid-lookups-cached-global", "postgresql-metadata-storage"]
      - druid_zk_service_host=zookeeper
      - druid_metadata_storage_host=
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/druid
      - druid_metadata_storage_connector_user=druid
      - druid_metadata_storage_connector_password=FoolishPassword
      - druid_coordinator_balancer_strategy=cachingCost
      - druid_indexer_runner_javaOptsArray=["-server", "-Xmx1g", "-Xms1g", "-XX:MaxDirectMemorySize=3g", "-Duser.timezone=UTC", "-Dfile.encoding=UTF-8", "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"]
      - druid_indexer_fork_property_druid_processing_buffer_sizeBytes=256MiB
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/shared/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/shared/indexing-logs
      - druid_processing_numThreads=1
      - druid_processing_numMergeBuffers=2
      - druid_processing_buffer_sizeBytes=250MiB
      - DRUID_LOG4J=<?xml version="1.0" encoding="UTF-8" ?><Configuration status="WARN"><Appenders><Console name="Console" target="SYSTEM_OUT"><PatternLayout pattern="%d{ISO8601} %p [%t] %c - %m%n"/></Console></Appenders><Loggers><Root level="info"><AppenderRef ref="Console"/></Root><Logger name="org.apache.druid.jetty.RequestLog" additivity="false" level="DEBUG"><AppenderRef ref="Console"/></Logger></Loggers></Configuration>

  broker:
    image: apache/druid:24.0.0
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
      - ./filesystem:/tmp/filesystem
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    environment:
      - DRUID_XMX=512m
      - DRUID_XMS=512m
      - DRUID_MAXNEWSIZE=250m
      - DRUID_NEWSIZE=250m
      - DRUID_MAXDIRECTMEMORYSIZE=400m
      - druid_emitter_logging_logLevel=debug
      - druid_extensions_loadList=["druid-histogram", "druid-datasketches", "druid-lookups-cached-global", "postgresql-metadata-storage"]
      - druid_zk_service_host=zookeeper
      - druid_metadata_storage_host=
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/druid
      - druid_metadata_storage_connector_user=druid
      - druid_metadata_storage_connector_password=FoolishPassword
      - druid_coordinator_balancer_strategy=cachingCost
      - druid_indexer_runner_javaOptsArray=["-server", "-Xmx1g", "-Xms1g", "-XX:MaxDirectMemorySize=3g", "-Duser.timezone=UTC", "-Dfile.encoding=UTF-8", "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"]
      - druid_indexer_fork_property_druid_processing_buffer_sizeBytes=256MiB
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/shared/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/shared/indexing-logs
      - druid_processing_numThreads=1
      - druid_processing_numMergeBuffers=2
      - druid_processing_buffer_sizeBytes=50MiB
      - druid_server_http_numThreads=6
      - druid_server_http_numConnections=6
      - druid_server_http_maxQueuedBytes=5MiB
      - DRUID_LOG4J=<?xml version="1.0" encoding="UTF-8" ?><Configuration status="WARN"><Appenders><Console name="Console" target="SYSTEM_OUT"><PatternLayout pattern="%d{ISO8601} %p [%t] %c - %m%n"/></Console></Appenders><Loggers><Root level="DEBUG"><AppenderRef ref="Console"/></Root><Logger name="org.apache.druid.jetty.RequestLog" additivity="false" level="DEBUG"><AppenderRef ref="Console"/></Logger></Loggers></Configuration>


  historical:
    image: apache/druid:24.0.0
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
      - ./filesystem:/tmp/filesystem
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    environment:
      - DRUID_XMX=512m
      - DRUID_XMS=512m
      - DRUID_MAXNEWSIZE=250m
      - DRUID_NEWSIZE=250m
      - DRUID_MAXDIRECTMEMORYSIZE=400m
      - druid_emitter_logging_logLevel=debug
      - druid_extensions_loadList=["druid-histogram", "druid-datasketches", "druid-lookups-cached-global", "postgresql-metadata-storage"]
      - druid_zk_service_host=zookeeper
      - druid_metadata_storage_host=
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/druid
      - druid_metadata_storage_connector_user=druid
      - druid_metadata_storage_connector_password=FoolishPassword
      - druid_coordinator_balancer_strategy=cachingCost
      - druid_indexer_runner_javaOptsArray=["-server", "-Xmx1g", "-Xms1g", "-XX:MaxDirectMemorySize=3g", "-Duser.timezone=UTC", "-Dfile.encoding=UTF-8", "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"]
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/shared/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/shared/indexing-logs
      - druid_processing_numThreads=1
      - druid_processing_numMergeBuffers=2
      - druid_processing_buffer_sizeBytes=50MiB
      - druid_historical_cache_useCache=true
      - druid_historical_cache_populateCache=true
      - druid_cache_type=caffeine
      - druid_cache_sizeInBytes=50MiB
      - druid_server_http_numThreads=6
      - DRUID_LOG4J=<?xml version="1.0" encoding="UTF-8" ?><Configuration status="WARN"><Appenders><Console name="Console" target="SYSTEM_OUT"><PatternLayout pattern="%d{ISO8601} %p [%t] %c - %m%n"/></Console></Appenders><Loggers><Root level="info"><AppenderRef ref="Console"/></Root><Logger name="org.apache.druid.jetty.RequestLog" additivity="false" level="DEBUG"><AppenderRef ref="Console"/></Logger></Loggers></Configuration>


  middlemanager:
    image: apache/druid:24.0.0
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
      - ./filesystem:/tmp/filesystem
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
    command:
      - middleManager
    environment:
      - DRUID_XMX=64m
      - DRUID_XMS=64m
      - DRUID_MAXNEWSIZE=100m
      - DRUID_NEWSIZE=100m
      - druid_emitter_logging_logLevel=debug
      - druid_extensions_loadList=["druid-histogram", "druid-datasketches", "druid-lookups-cached-global", "postgresql-metadata-storage"]
      - druid_zk_service_host=zookeeper
      - druid_metadata_storage_host=
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/druid
      - druid_metadata_storage_connector_user=druid
      - druid_metadata_storage_connector_password=FoolishPassword
      - druid_coordinator_balancer_strategy=cachingCost
      - druid_indexer_runner_javaOptsArray=["-server", "-Xmx1g", "-Xms1g", "-XX:MaxDirectMemorySize=3g", "-Duser.timezone=UTC", "-Dfile.encoding=UTF-8", "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"]
      - druid_indexer_fork_property_druid_processing_buffer_sizeBytes=50MiB
      - druid_indexer_fork_property_druid_processing_buffer_numThreads=1
      - druid_indexer_fork_property_druid_processing_buffer_numMergeBuffers=1
      - druid_storage_type=local
      - druid_worker_capacity=2
      - druid_storage_storageDirectory=/opt/shared/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/shared/indexing-logs
      - druid_processing_numThreads=2
      - druid_processing_numMergeBuffers=2
      - druid_server_http_numThreads=6
      - DRUID_LOG4J=<?xml version="1.0" encoding="UTF-8" ?><Configuration status="WARN"><Appenders><Console name="Console" target="SYSTEM_OUT"><PatternLayout pattern="%d{ISO8601} %p [%t] %c - %m%n"/></Console></Appenders><Loggers><Root level="info"><AppenderRef ref="Console"/></Root><Logger name="org.apache.druid.jetty.RequestLog" additivity="false" level="DEBUG"><AppenderRef ref="Console"/></Logger></Loggers></Configuration>

  router:
    image: apache/druid:24.0.0
    container_name: router
    volumes:
      - router_var:/opt/druid/var
      - ./filesystem:/tmp/filesystem
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    environment:
      - DRUID_XMX=128m
      - DRUID_XMS=128m
      - DRUID_MAXNEWSIZE=250m
      - DRUID_NEWSIZE=250m
      - DRUID_MAXDIRECTMEMORYSIZE=128m
      - druid_emitter_logging_logLevel=debug
      - druid_extensions_loadList=["druid-histogram", "druid-datasketches", "druid-lookups-cached-global", "postgresql-metadata-storage"]
      - druid_zk_service_host=zookeeper
      - druid_metadata_storage_host=
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/druid
      - druid_metadata_storage_connector_user=druid
      - druid_metadata_storage_connector_password=FoolishPassword
      - druid_coordinator_balancer_strategy=cachingCost
      - druid_indexer_runner_javaOptsArray=["-server", "-Xmx1g", "-Xms1g", "-XX:MaxDirectMemorySize=3g", "-Duser.timezone=UTC", "-Dfile.encoding=UTF-8", "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"]
      - druid_indexer_fork_property_druid_processing_buffer_sizeBytes=256MiB
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/shared/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/shared/indexing-logs
      - druid_processing_numThreads=2
      - druid_processing_numMergeBuffers=2
      - druid_router_http_numConnections=25
      - druid_router_http_readTimeout=PT5M
      - druid_router_http_numMaxThreads=50
      - druid_server_http_numThreads=50
      - DRUID_LOG4J=<?xml version="1.0" encoding="UTF-8" ?><Configuration status="WARN"><Appenders><Console name="Console" target="SYSTEM_OUT"><PatternLayout pattern="%d{ISO8601} %p [%t] %c - %m%n"/></Console></Appenders><Loggers><Root level="info"><AppenderRef ref="Console"/></Root><Logger name="org.apache.druid.jetty.RequestLog" additivity="false" level="DEBUG"><AppenderRef ref="Console"/></Logger></Loggers></Configuration>


  # you can comment lines 320 to lines 333 if you do not want pgAdmin
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    links:
      - "postgres"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  analytics:
    build: ./analytics
    image: analytics
    container_name: analyticsR
    links:
      - "postgres"
    depends_on:
      - postgres
    volumes:
      -  ./analytics/codes:/app/

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 5051:8080
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
  
  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    # yamllint disable rule:line-length
    command:
      - -c
      - |
        function ver() {
          printf "%04d%04d%04d%04d" $${1//./ }
        }
        airflow_version=$$(gosu airflow airflow version)
        airflow_version_comparable=$$(ver $${airflow_version})
        min_airflow_version=2.2.0
        min_airflow_version_comparable=$$(ver $${min_airflow_version})
        if (( airflow_version_comparable < min_airflow_version_comparable )); then
          echo
          echo -e "\033[1;31mERROR!!!: Too old Airflow version $${airflow_version}!\e[0m"
          echo "The minimum Airflow version supported: $${min_airflow_version}. Only use this or higher!"
          echo
          exit 1
        fi
        if [[ -z "${AIRFLOW_UID}" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m"
          echo "If you are on Linux, you SHOULD follow the instructions below to set "
          echo "AIRFLOW_UID environment variable, otherwise files will be owned by root."
          echo "For other operating systems you can get rid of the warning with manually created .env file:"
          echo "    See: https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html#setting-the-right-airflow-user"
          echo
        fi
        one_meg=1048576
        mem_available=$$(($$(getconf _PHYS_PAGES) * $$(getconf PAGE_SIZE) / one_meg))
        cpus_available=$$(grep -cE 'cpu[0-9]+' /proc/stat)
        disk_available=$$(df / | tail -1 | awk '{print $$4}')
        warning_resources="false"
        if (( mem_available < 4000 )) ; then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough memory available for Docker.\e[0m"
          echo "At least 4GB of memory required. You have $$(numfmt --to iec $$((mem_available * one_meg)))"
          echo
          warning_resources="true"
        fi
        if (( cpus_available < 2 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough CPUS available for Docker.\e[0m"
          echo "At least 2 CPUs recommended. You have $${cpus_available}"
          echo
          warning_resources="true"
        fi
        if (( disk_available < one_meg * 10 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough Disk space available for Docker.\e[0m"
          echo "At least 10 GBs recommended. You have $$(numfmt --to iec $$((disk_available * 1024 )))"
          echo
          warning_resources="true"
        fi
        if [[ $${warning_resources} == "true" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: You have not enough resources to run Airflow (see above)!\e[0m"
          echo "Please follow the instructions to increase amount of resources available:"
          echo "   https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html#before-you-begin"
          echo
        fi
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    # yamllint enable rule:line-length
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: 'airflow'
      _AIRFLOW_WWW_USER_PASSWORD: 'airflow'
    user: "0:0"
    volumes:
      - .:/sources
